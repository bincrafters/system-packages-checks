# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  schedule:
    - cron:  '0 10 * * *'
  push:
    branches:
      - '**' 
  workflow_dispatch: {}


env:
  GH_TOKEN: ${{ secrets.GH_TOKEN }}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  generate-matrix:
    name: Generate Job Matrix
    runs-on: ubuntu-20.04
    outputs:
      matrixLinux: ${{ steps.set-matrix.outputs.matrixLinux }}
      matrixBSD: ${{ steps.set-matrix.outputs.matrixBSD }}
    steps:
      - uses: actions/checkout@v2        
      - name: Checkout CCI
        uses: actions/checkout@v2
        with:
          repository: conan-io/conan-center-index
          path: CCI
      - uses: actions/setup-python@v1
        with:
          python-version: "3.8"
      - run: "python3 -m pip install pyyaml requests aiohttp"
      - name: Generate Job Matrix
        id: set-matrix
        run: |
          python3 main.py
          MATRIXLINUX=$(cat matrixLinux.yml)
          echo "${MATRIXLINUX}"
          echo "::set-output name=matrixLinux::${MATRIXLINUX}"
          
          MATRIXBSD=$(cat matrixBSD.yml)
          echo "${MATRIXBSD}"
          echo "::set-output name=matrixBSD::${MATRIXBSD}"
  
  FreeBSD:
    if: ${{ true }}
    needs: generate-matrix
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.generate-matrix.outputs.matrixBSD)}}
      
    runs-on: macos-10.15

    env:
      CC: clang
      CXX: clang++
      CONAN_SYSREQUIRES_MODE: enabled
    steps:
    - name: Checkout CCI
      uses: actions/checkout@v2
      with:
        repository: ${{ matrix.repo }}
        ref: ${{ matrix.ref }}
        path: CCI
    - name: run
      id: test
      uses: vmactions/freebsd-vm@v0.1.5
      with:
        envs: 'CONAN_MAKE_PROGRAM CC CXX CONAN_SYSREQUIRES_MODE'
        usesh: true
        prepare: pkg install -y cmake py38-pip py38-sqlite3 sudo pkgconf
        run: |
          python3.8 -m pip install conan
          code=0
          set +o pipefail
          conan create CCI/recipes/${{ matrix.package }}/${{ matrix.folder }} ${{ matrix.package }}/system@ || code=$?
          echo job_id: ${{ matrix.job_id }} > artifact_FreeBSD_${{ matrix.job_id }}.yml
          echo package: ${{ matrix.package }} >> artifact_FreeBSD_${{ matrix.job_id }}.yml
          echo pr: ${{ matrix.pr }} >> artifact_FreeBSD_${{ matrix.job_id }}.yml
          echo distro: FreeBSD >> artifact_FreeBSD_${{ matrix.job_id }}.yml
          echo res: $code >> artifact_FreeBSD_${{ matrix.job_id }}.yml
          if [ $code == 6 ]
          then
            code=0
          fi
          exit "$code"
      - uses: actions/upload-artifact@v3
        if: ${{ always() }} 
        with:
          name: my-artifact
          path: artifact_${{ matrix.job_id }}.yml
        
  Linux:
    if: ${{ true }}
    needs: generate-matrix
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.generate-matrix.outputs.matrixLinux)}}
      
    runs-on: ubuntu-20.04
    container: ${{ matrix.distro }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Install Python
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          case ${{ matrix.distro }} in
            opensuse*)
              zypper --non-interactive install python3 python3-pip python3-setuptools python3-wheel tar gzip gcc-c++ make;;
            debian*)
              apt-get update && apt-get -qq install -y --no-install-recommends python3-pip python3-setuptools pkg-config g++ make;;
            ubuntu*)
              apt-get update && apt-get -qq install -y --no-install-recommends python3-pip python3-setuptools pkg-config g++ make;;
            quay.io/centos/centos:stream8)
              yum -y install dnf-plugins-core && yum config-manager --set-enabled powertools && yum install -y python3 python3-pip pkgconf-pkg-config gcc-c++ make;;
            quay.io/centos/centos:stream9)
              yum -y install dnf-plugins-core && yum config-manager --set-enabled crb && yum install -y python3 python3-pip pkgconf-pkg-config gcc-c++ make;;
            almalinux*)
              yum -y install dnf-plugins-core && yum config-manager --set-enabled powertools && yum install -y epel-release && yum install -y python3 python3-wheel python3-pip pkgconf-pkg-config gcc-c++ make;;
            archlinux*)
              pacman -Syu --noconfirm python-pip gcc pkgconf gcc make;;
            fedora*)
              dnf -y install python3 python3-wheel python3-pip pkgconf-pkg-config gcc-c++ make;;
          esac
        
      - name: install conan
        run: python3 -m pip install --upgrade pip && python3 -m pip install conan --ignore-installed
        
      - name: Checkout CCI
        uses: actions/checkout@v2
        with:
          repository: ${{ matrix.repo }}
          ref: ${{ matrix.ref }}
          path: CCI
      - name: run
        shell: bash
        env:
          CONAN_SYSREQUIRES_MODE: enabled
          CONAN_SYSREQUIRES_SUDO: 0
          DEBIAN_FRONTEND: noninteractive
        run: |
          conan config install ${GITHUB_SERVER_URL}/${{ github.repository }}/archive/${{ github.sha }}.zip -sf=system-packages-checks-${{ github.sha }}/config 
          conan install cmake/3.18.2@ -g virtualrunenv -b missing -s compiler.version=5 -s compiler.cppstd=11
          source ./activate_run.sh
          code=0
          set +o pipefail
          conan create CCI/recipes/${{ matrix.package }}/${{ matrix.folder }} ${{ matrix.package }}/system@ || code=$?
          echo job_id: ${{ matrix.job_id }} > artifact_${{ matrix.distro }}_${{ matrix.job_id }}.yml
          echo package: ${{ matrix.package }} >> artifact_${{ matrix.distro }}_${{ matrix.job_id }}.yml
          echo pr: ${{ matrix.pr }} >> artifact_${{ matrix.distro }}_${{ matrix.job_id }}.yml
          echo distro: ${{ matrix.distro }} >> artifact_${{ matrix.distro }}_${{ matrix.job_id }}.yml
          echo res: $code >> artifact_${{ matrix.distro }}_${{ matrix.job_id }}.yml
          if [ $code == 6 ]
          then
            code=0
          fi
          exit "$code"
          
      - uses: actions/upload-artifact@v3
        if: ${{ always() }} 
        with:
          name: my-artifact
          path: artifact_${{ matrix.job_id }}.yml

  Raspberry:
    if: ${{ true }}
    needs: generate-matrix
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.generate-matrix.outputs.matrixBSD)}}
      
    runs-on: ubuntu-latest

    steps:
    - name: Checkout CCI
      uses: actions/checkout@v2
      with:
        repository: ${{ matrix.repo }}
        ref: ${{ matrix.ref }}
        path: CCI
    - name: run
      id: test
      uses: pguyot/arm-runner-action@main
      with:
        image_additional_mb: 1024
        shell: bash
        commands: |
          export CONAN_SYSREQUIRES_MODE=enabled
          export CONAN_SYSREQUIRES_SUDO=0
          export DEBIAN_FRONTEND=noninteractive
          export PIP_ONLY_BINARY=cmake # workaround scikit-build/cmake-python-distributions#192
          apt-get update && apt-get -qq install -y --no-install-recommends python3-pip python3-setuptools pkg-config g++ make
          python3 -m pip install --upgrade pip && python3 -m pip install conan --ignore-installed
          python3 -m pip install cmake -Iv cmake==3.22.0
          code=0
          set +o pipefail
          conan create CCI/recipes/${{ matrix.package }}/${{ matrix.folder }} ${{ matrix.package }}/system@ || code=$?
          echo job_id: ${{ matrix.job_id }} > artifact_Raspberry_${{ matrix.job_id }}.yml
          echo package: ${{ matrix.package }} >> artifact_Raspberry_${{ matrix.job_id }}.yml
          echo pr: ${{ matrix.pr }} >> artifact_Raspberry_${{ matrix.job_id }}.yml
          echo distro: Raspberry >> artifact_Raspberry_${{ matrix.job_id }}.yml
          echo res: $code >> artifact_Raspberry_${{ matrix.job_id }}.yml
          if [ $code == 6 ]
          then
            code=0
          fi
          exit "$code"
      - uses: actions/upload-artifact@v3
        if: ${{ always() }} 
        with:
          name: my-artifact
          path: artifact_${{ matrix.job_id }}.yml
